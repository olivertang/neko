import { sendTransaction } from "permissionless/actions/smartAccount";
import { AccountOrClientNotFoundError, parseAccount } from "permissionless/utils";
import { encodeFunctionData, getAction } from "viem/utils";
import { KernelV3AccountAbi } from "../../accounts/kernel/abi/kernel_v_3_0_0/KernelAccountAbi.js";
export async function invalidateNonce(client, args) {
    const { account: account_ = client.account, middleware, nonceToSet } = args;
    if (!account_)
        throw new AccountOrClientNotFoundError();
    const account = parseAccount(account_);
    return await getAction(client, (sendTransaction), "sendTransaction")({
        ...args,
        to: account.address,
        data: encodeFunctionData({
            abi: KernelV3AccountAbi,
            functionName: "invalidateNonce",
            args: [nonceToSet]
        }),
        value: 0n,
        account,
        middleware
    });
}
//# sourceMappingURL=invalidateNonce.js.map