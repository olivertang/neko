import { type BundlerClient } from "permissionless";
import type { ENTRYPOINT_ADDRESS_V06_TYPE, EntryPoint, PartialPick } from "permissionless/types";
import type { StateOverrides } from "permissionless/types/bundler";
import type { UserOperation } from "permissionless/types/userOperation.js";
import type { PartialBy } from "viem/types/utils";
import type { ZeroDevPaymasterClient } from "../../clients/paymasterClient.js";
export type SponsorUserOperationEip7677Parameters<entryPoint extends EntryPoint> = {
    userOperation: entryPoint extends ENTRYPOINT_ADDRESS_V06_TYPE ? PartialBy<UserOperation<"v0.6">, "callGasLimit" | "preVerificationGas" | "verificationGasLimit"> : PartialBy<UserOperation<"v0.7">, "callGasLimit" | "preVerificationGas" | "verificationGasLimit" | "paymasterVerificationGasLimit" | "paymasterPostOpGasLimit">;
    entryPoint: entryPoint;
};
export type SponsorUserOperationEip7677ReturnType<entryPoint extends EntryPoint> = entryPoint extends ENTRYPOINT_ADDRESS_V06_TYPE ? Pick<UserOperation<"v0.6">, "callGasLimit" | "verificationGasLimit" | "preVerificationGas" | "paymasterAndData"> & PartialPick<UserOperation<"v0.6">, "maxFeePerGas" | "maxPriorityFeePerGas"> : Pick<UserOperation<"v0.7">, "callGasLimit" | "verificationGasLimit" | "preVerificationGas" | "paymaster" | "paymasterVerificationGasLimit" | "paymasterPostOpGasLimit" | "paymasterData"> & PartialPick<UserOperation<"v0.7">, "maxFeePerGas" | "maxPriorityFeePerGas">;
/**
 * Returns paymasterAndData & updated gas parameters required to sponsor a userOperation.
 */
export declare const sponsorUserOperationEip7677: <entryPoint extends EntryPoint>(client: ZeroDevPaymasterClient<entryPoint>, args: SponsorUserOperationEip7677Parameters<entryPoint>, bundlerClient: BundlerClient<entryPoint>, stateOverrides?: StateOverrides) => Promise<SponsorUserOperationEip7677ReturnType<entryPoint>>;
//# sourceMappingURL=sponsorUserOperationEip7677.d.ts.map