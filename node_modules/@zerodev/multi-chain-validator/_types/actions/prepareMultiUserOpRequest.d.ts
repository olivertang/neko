import type { SmartAccount } from "permissionless/accounts";
import type { PrepareUserOperationRequestParameters, PrepareUserOperationRequestReturnType } from "permissionless/actions/smartAccount";
import type { ENTRYPOINT_ADDRESS_V07_TYPE, EntryPoint } from "permissionless/types";
import type { StateOverrides } from "permissionless/types/bundler";
import type { Chain, Client, Transport } from "viem";
import type { Prettify } from "viem/chains";
import { ValidatorType } from "./type.js";
export declare function prepareMultiUserOpRequest<entryPoint extends EntryPoint = ENTRYPOINT_ADDRESS_V07_TYPE, TTransport extends Transport = Transport, TChain extends Chain | undefined = Chain | undefined, TAccount extends SmartAccount<entryPoint, string, TTransport, TChain> | undefined = SmartAccount<entryPoint, string, TTransport, TChain> | undefined>(client: Client<TTransport, TChain, TAccount>, args: Prettify<PrepareUserOperationRequestParameters<entryPoint, TTransport, TChain, TAccount>>, validatorType: ValidatorType, numOfUserOps: number, stateOverrides?: StateOverrides): Promise<Prettify<PrepareUserOperationRequestReturnType<entryPoint>>>;
//# sourceMappingURL=prepareMultiUserOpRequest.d.ts.map