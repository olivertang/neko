import { type KernelSmartAccount } from "@zerodev/sdk";
import type { UserOperation } from "permissionless";
import type { EntryPoint, GetEntryPointVersion } from "permissionless/types/entrypoint";
export type MultiChainUserOpConfigForEnable<entryPoint extends EntryPoint> = {
    account: KernelSmartAccount<entryPoint>;
    userOp: UserOperation<GetEntryPointVersion<entryPoint>>;
};
/**
 *
 * @dev Sign user operations with enable signatures for multi-chain validator
 * @returns Signed user operations
 */
export declare const ecdsaSignUserOpsWithEnable: <entryPoint extends EntryPoint>({ multiChainUserOpConfigsForEnable }: {
    multiChainUserOpConfigsForEnable: MultiChainUserOpConfigForEnable<entryPoint>[];
}) => Promise<UserOperation<GetEntryPointVersion<entryPoint>>[]>;
//# sourceMappingURL=ecdsaSignUserOpsWithEnable.d.ts.map