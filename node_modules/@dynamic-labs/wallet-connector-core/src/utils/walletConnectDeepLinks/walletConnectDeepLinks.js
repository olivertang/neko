'use client'
import { isAndroid, isMobile } from '@dynamic-labs/utils';

const getConnectionDeepLink = (uri, deepLinks, preference) => {
    // on android, the connection deeplink is simply the uri
    // see: https://docs.walletconnect.com/mobile-linking#for-android
    if (isAndroid()) {
        return uri;
    }
    const deepLink = getRegularDeepLink(uri, deepLinks, preference);
    if (!deepLink) {
        return `${deepLink}?uri=${encodeURIComponent(uri)}`;
    }
    const deepLinkUrl = new URL(deepLink);
    const deepLinkParams = new URLSearchParams(deepLinkUrl.search);
    deepLinkParams.set('uri', uri);
    deepLinkUrl.search = deepLinkParams.toString();
    return deepLinkUrl.toString();
};
const getRegularDeepLink = (uri, deepLinks, preference) => {
    var _a, _b, _c, _d;
    if (isAndroid()) {
        // on android, the deeplink is simply the uri, without the query params
        // see: https://docs.walletconnect.com/mobile-linking#for-android
        return uri.split('?')[0];
    }
    const index = isMobile() ? 'mobile' : 'desktop';
    let origin;
    if (preference === 'native') {
        origin = ((_a = deepLinks[index]) === null || _a === void 0 ? void 0 : _a.native) || ((_b = deepLinks[index]) === null || _b === void 0 ? void 0 : _b.universal);
    }
    else {
        origin = ((_c = deepLinks[index]) === null || _c === void 0 ? void 0 : _c.universal) || ((_d = deepLinks[index]) === null || _d === void 0 ? void 0 : _d.native);
    }
    return origin || '';
};
const getDeepLink = ({ mode, uri = '', deepLinks, preference, }) => {
    if (!deepLinks) {
        return '';
    }
    switch (mode) {
        case 'connection':
            return getConnectionDeepLink(uri, deepLinks, preference);
        case 'regular':
            return getRegularDeepLink(uri, deepLinks, preference);
    }
};

export { getDeepLink };
