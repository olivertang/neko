import { IUITransaction } from '@dynamic-labs/types';
import { EcdsaValidatorOptions, ProviderEntryPointVersionEnum, ProviderKernelVersionEnum } from '@dynamic-labs/sdk-api-core';
import { WalletConnector, WalletConnectorBase } from '../WalletConnectorBase';
type GetAccountAbstractionProviderProps = {
    withSponsorship?: boolean;
};
export interface IAccountAbstractionWalletConnector extends WalletConnectorBase {
    canSponsorTransactionGas(transaction: IUITransaction): Promise<boolean>;
    disableGasSponsorshipOnce(): void;
    getAccountAbstractionProvider<T>(props?: GetAccountAbstractionProviderProps): T;
    getAccountAbstractionProvider(props?: GetAccountAbstractionProviderProps): unknown;
    /**
     * @deprecated You should get the EOA connector by passing the SCW wallet to getEOAConnector,
     * from the useSmartWallet hook
     */
    getEOAConnector(): WalletConnector | undefined;
    registerEoa({ smartWalletAddress, eoaAddress, eoaConnector, shouldSetEoaConnector, ecdsaProviderType, entryPointVersion, kernelVersion, }: {
        smartWalletAddress: string;
        eoaAddress: string;
        eoaConnector: WalletConnectorBase;
        shouldSetEoaConnector?: boolean;
        ecdsaProviderType?: EcdsaValidatorOptions;
        entryPointVersion?: ProviderEntryPointVersionEnum;
        kernelVersion?: ProviderKernelVersionEnum;
    }): Promise<void>;
}
export {};
