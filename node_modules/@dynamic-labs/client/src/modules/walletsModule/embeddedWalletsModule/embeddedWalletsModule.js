'use client'
import { createStore, createEventEmitterForMessages, embeddedWalletsEventNames, createRequestChannel } from '@dynamic-labs/message-transport';
import { pickListenerActions } from '../../../utils/pickListenerActions/pickListenerActions.js';

const createEmbeddedWalletsModule = (core) => {
    const store = createStore({
        initialState: {
            hasWallet: false,
        },
        key: 'embeddedWallets',
        messageTransport: core.messageTransport,
    });
    const messageEvents = createEventEmitterForMessages({
        eventNames: embeddedWalletsEventNames,
        initialEventEmitter: store.eventEmitter,
        messageTransport: core.messageTransport,
    });
    const requestChannel = createRequestChannel(core.messageTransport);
    return Object.assign(store.getters, pickListenerActions(messageEvents), {
        createWallet: (args) => requestChannel.request('createWallet', args),
        getWallet: () => requestChannel.request('getWallet'),
    });
};

export { createEmbeddedWalletsModule };
