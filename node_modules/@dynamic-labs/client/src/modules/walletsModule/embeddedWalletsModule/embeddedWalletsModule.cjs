'use client'
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var messageTransport = require('@dynamic-labs/message-transport');
var pickListenerActions = require('../../../utils/pickListenerActions/pickListenerActions.cjs');

const createEmbeddedWalletsModule = (core) => {
    const store = messageTransport.createStore({
        initialState: {
            hasWallet: false,
        },
        key: 'embeddedWallets',
        messageTransport: core.messageTransport,
    });
    const messageEvents = messageTransport.createEventEmitterForMessages({
        eventNames: messageTransport.embeddedWalletsEventNames,
        initialEventEmitter: store.eventEmitter,
        messageTransport: core.messageTransport,
    });
    const requestChannel = messageTransport.createRequestChannel(core.messageTransport);
    return Object.assign(store.getters, pickListenerActions.pickListenerActions(messageEvents), {
        createWallet: (args) => requestChannel.request('createWallet', args),
        getWallet: () => requestChannel.request('getWallet'),
    });
};

exports.createEmbeddedWalletsModule = createEmbeddedWalletsModule;
