'use client'
import { createRequestChannel, createEventEmitterForMessages, userInterfaceEventNames } from '@dynamic-labs/message-transport';
import { pickListenerActions } from '../../utils/pickListenerActions/pickListenerActions.js';

const createUserInterfaceModule = (core) => {
    const userInterfaceRequestChannel = createRequestChannel(core.messageTransport);
    const messageEvents = createEventEmitterForMessages({
        eventNames: userInterfaceEventNames,
        messageTransport: core.messageTransport,
    });
    return Object.assign(pickListenerActions(messageEvents), {
        auth: {
            hide: () => userInterfaceRequestChannel.emit('hideAuthFlow'),
            show: () => userInterfaceRequestChannel.emit('openAuthFlow'),
        },
        userProfile: {
            hide: () => userInterfaceRequestChannel.emit('hideUserProfile'),
            show: () => userInterfaceRequestChannel.emit('openUserProfile'),
        },
        wallets: {
            revealEmbeddedWalletKey: (params) => userInterfaceRequestChannel.emit('revealEmbeddedWalletKey', params),
        },
    });
};

export { createUserInterfaceModule };
