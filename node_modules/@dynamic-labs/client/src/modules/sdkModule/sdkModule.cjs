'use client'
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var reactivity = require('@vue/reactivity');
var messageTransport = require('@dynamic-labs/message-transport');
var pickListenerActions = require('../../utils/pickListenerActions/pickListenerActions.cjs');
var addProperty = require('../../utils/addProperty/addProperty.cjs');

const createSdkModule = (core) => {
    const store = messageTransport.createStore({
        initialState: {
            loaded: false,
        },
        key: 'sdk',
        messageTransport: core.messageTransport,
    });
    const eventEmitter = store.eventEmitter;
    const baseModule = Object.assign(store.getters, pickListenerActions.pickListenerActions(eventEmitter));
    reactivity.effect(() => core.initialization.error, {
        scheduler: () => eventEmitter.emit('error', core.initialization.error),
    });
    return addProperty.addProperty(baseModule, 'error', {
        get: () => core.initialization.error,
    });
};

exports.createSdkModule = createSdkModule;
