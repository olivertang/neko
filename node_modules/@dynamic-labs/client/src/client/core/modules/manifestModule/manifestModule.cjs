'use client'
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _tslib = require('../../../../../_virtual/_tslib.cjs');
var messageTransport = require('@dynamic-labs/message-transport');
var logger$1 = require('@dynamic-labs/logger');
var logger = require('../../../../utils/logger/logger.cjs');
var createPartialManifest = require('./createPartialManifest/createPartialManifest.cjs');
var validateManifest = require('./validateManifest/validateManifest.cjs');

/**
 * Manifest module handles the client manifest that will be requested by the webview
 */
const createManifestModule = (props, messageTransport$1, initializationModule) => {
    const requestChannel = messageTransport.createRequestChannel(messageTransport$1);
    const manifest = createPartialManifest.createPartialManifest(props);
    requestChannel.handle('manifest', () => _tslib.__awaiter(void 0, void 0, void 0, function* () {
        try {
            return validateManifest.validateManifest(manifest);
        }
        catch (error) {
            logger.logger.error(error);
            if (error instanceof Error)
                initializationModule.error = error;
            throw error;
        }
    }));
    return {
        setAppOrigin: (appOrigin) => (manifest.appOrigin = appOrigin),
        setPlatform: (platform) => {
            logger$1.Logger.globalMetaData.set('platform', platform);
            manifest.platform = platform;
        },
        setRedirectUrl: (redirectUrl) => (manifest.redirectUrl = redirectUrl),
    };
};

exports.createManifestModule = createManifestModule;
