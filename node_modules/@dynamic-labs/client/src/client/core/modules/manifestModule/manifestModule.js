'use client'
import { __awaiter } from '../../../../../_virtual/_tslib.js';
import { createRequestChannel } from '@dynamic-labs/message-transport';
import { Logger } from '@dynamic-labs/logger';
import { logger } from '../../../../utils/logger/logger.js';
import { createPartialManifest } from './createPartialManifest/createPartialManifest.js';
import { validateManifest } from './validateManifest/validateManifest.js';

/**
 * Manifest module handles the client manifest that will be requested by the webview
 */
const createManifestModule = (props, messageTransport, initializationModule) => {
    const requestChannel = createRequestChannel(messageTransport);
    const manifest = createPartialManifest(props);
    requestChannel.handle('manifest', () => __awaiter(void 0, void 0, void 0, function* () {
        try {
            return validateManifest(manifest);
        }
        catch (error) {
            logger.error(error);
            if (error instanceof Error)
                initializationModule.error = error;
            throw error;
        }
    }));
    return {
        setAppOrigin: (appOrigin) => (manifest.appOrigin = appOrigin),
        setPlatform: (platform) => {
            Logger.globalMetaData.set('platform', platform);
            manifest.platform = platform;
        },
        setRedirectUrl: (redirectUrl) => (manifest.redirectUrl = redirectUrl),
    };
};

export { createManifestModule };
