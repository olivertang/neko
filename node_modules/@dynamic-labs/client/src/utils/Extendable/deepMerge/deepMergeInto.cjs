'use client'
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

/** Performs a deep merge into obj1 */
const deepMergeInto = (obj1, obj2) => {
    // Merge obj2 into obj1, recursively if the property is an object
    for (const key in obj2) {
        if (!Object.prototype.hasOwnProperty.call(obj2, key))
            continue;
        // If key exists in obj1 and both are objects, recurse
        if (Object.prototype.hasOwnProperty.call(obj1, key) &&
            typeof obj1[key] === 'object' &&
            typeof obj2[key] === 'object') {
            obj1[key] = deepMergeInto(obj1[key], obj2[key]);
        }
        else {
            // Otherwise, just overwrite/add the property from obj2
            obj1[key] = obj2[key];
        }
    }
    return obj1;
};

exports.deepMergeInto = deepMergeInto;
