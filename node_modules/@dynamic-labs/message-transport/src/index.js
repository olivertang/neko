'use client'
import { assertPackageVersion } from '@dynamic-labs/assert-package-version';
import { version } from '../package.js';
export { createMessageTransport } from './messageTransport/messageTransport.js';
export { applyDefaultMessageOrigin } from './messageTransport/decorators/applyDefaultMessageOrigin/applyDefaultMessageOrigin.js';
export { makeWaitForInitEvent } from './messageTransport/decorators/makeWaitForInitEvent/makeWaitForInitEvent.js';
export { makeWaitForUnblock } from './messageTransport/decorators/makeWaitForUnblock/makeWaitForUnblock.js';
export { createRequestChannel } from './requestChannel/requestChannel.js';
export { parseErrorFromTransport } from './utils/parseErrorFromTransport/parseErrorFromTransport.js';
export { parseMessageTransportData } from './utils/parseMessageTransportData/parseMessageTransportData.js';
export { serializeErrorForTransport } from './utils/serializeErrorForTransport/serializeErrorForTransport.js';
export { createEventEmitterForMessages } from './store/createEventEmitterForMessages/createEventEmitterForMessages.js';
export { createStore } from './store/store.js';
export { createStoreSetter } from './store/storeSetter/storeSetter.js';
export { authEventNames } from './messageTypes/AuthModuleMessages.js';
export { embeddedWalletsEventNames } from './messageTypes/EmbeddedWalletsModuleMessages.js';
export { emailEventNames, smsEventNames } from './messageTypes/OtpMessages.js';
export { sdkHasLoadedEventName } from './messageTypes/SdkModuleMessages.js';
export { userInterfaceEventNames } from './messageTypes/UserInterfaceModuleMessages.js';
export { userWalletsEventNames } from './messageTypes/WalletsModuleMessages.js';

assertPackageVersion('@dynamic-labs/message-transport', version);
