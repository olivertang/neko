'use client'
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var assertPackageVersion = require('@dynamic-labs/assert-package-version');
var _package = require('../package.cjs');
var ZeroDevConnector = require('./ZeroDevConnector.cjs');
var createEcsdaKernelAccountClient = require('./utils/createEcsdaKernelAccountClient.cjs');
var fetchZeroDevChain = require('./utils/fetchZeroDevChain.cjs');
var getEcdsaValidator = require('./utils/getEcdsaValidator.cjs');
var getEntryPoint = require('./utils/getEntryPoint.cjs');
var getKernelVersion = require('./utils/getKernelVersion.cjs');
var ethereumAa = require('./ethereum-aa.cjs');
var isZeroDevConnector = require('./utils/isZeroDevConnector.cjs');

assertPackageVersion.assertPackageVersion('@dynamic-labs/ethereum-aa', _package.version);
const ZeroDevSmartWalletConnectorsWithConfig = ({ bundlerProvider, bundlerRpc, paymasterRpc, } = {}) => {
    ZeroDevConnector.ZeroDevConnector.bundlerProvider = bundlerProvider;
    ZeroDevConnector.ZeroDevConnector.bundlerRpc = bundlerRpc;
    ZeroDevConnector.ZeroDevConnector.paymasterRpc = paymasterRpc;
    return ZeroDevSmartWalletConnectors;
};
const ZeroDevSmartWalletConnectors = (props) => {
    var _a;
    if ((_a = props.apiProviders) === null || _a === void 0 ? void 0 : _a.zerodev) {
        return [ZeroDevConnector.ZeroDevConnector];
    }
    return [];
};

exports.createEcdsaKernelAccountClient = createEcsdaKernelAccountClient.createEcdsaKernelAccountClient;
exports.fetchZeroDevChain = fetchZeroDevChain.fetchZeroDevChain;
exports.getEcdsaValidator = getEcdsaValidator.getEcdsaValidator;
exports.getEntryPoint = getEntryPoint.getEntryPoint;
exports.getKernelVersion = getKernelVersion.getKernelVersion;
exports.EthereumAaConnector = ethereumAa.EthereumAaConnector;
exports.isZeroDevConnector = isZeroDevConnector.isZeroDevConnector;
exports.ZeroDevSmartWalletConnectors = ZeroDevSmartWalletConnectors;
exports.ZeroDevSmartWalletConnectorsWithConfig = ZeroDevSmartWalletConnectorsWithConfig;
