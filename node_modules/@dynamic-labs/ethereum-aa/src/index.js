'use client'
import { assertPackageVersion } from '@dynamic-labs/assert-package-version';
import { version } from '../package.js';
import { ZeroDevConnector } from './ZeroDevConnector.js';
export { createEcdsaKernelAccountClient } from './utils/createEcsdaKernelAccountClient.js';
export { fetchZeroDevChain } from './utils/fetchZeroDevChain.js';
export { getEcdsaValidator } from './utils/getEcdsaValidator.js';
export { getEntryPoint } from './utils/getEntryPoint.js';
export { getKernelVersion } from './utils/getKernelVersion.js';
export { EthereumAaConnector } from './ethereum-aa.js';
export { isZeroDevConnector } from './utils/isZeroDevConnector.js';

assertPackageVersion('@dynamic-labs/ethereum-aa', version);
const ZeroDevSmartWalletConnectorsWithConfig = ({ bundlerProvider, bundlerRpc, paymasterRpc, } = {}) => {
    ZeroDevConnector.bundlerProvider = bundlerProvider;
    ZeroDevConnector.bundlerRpc = bundlerRpc;
    ZeroDevConnector.paymasterRpc = paymasterRpc;
    return ZeroDevSmartWalletConnectors;
};
const ZeroDevSmartWalletConnectors = (props) => {
    var _a;
    if ((_a = props.apiProviders) === null || _a === void 0 ? void 0 : _a.zerodev) {
        return [ZeroDevConnector];
    }
    return [];
};

export { ZeroDevSmartWalletConnectors, ZeroDevSmartWalletConnectorsWithConfig };
