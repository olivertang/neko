'use client'
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _tslib = require('../../../_virtual/_tslib.cjs');
var viem = require('viem');
var chains = require('viem/chains');
var messageTransport = require('@dynamic-labs/message-transport');

function _interopNamespace(e) {
  if (e && e.__esModule) return e;
  var n = Object.create(null);
  if (e) {
    Object.keys(e).forEach(function (k) {
      if (k !== 'default') {
        var d = Object.getOwnPropertyDescriptor(e, k);
        Object.defineProperty(n, k, d.get ? d : {
          enumerable: true,
          get: function () { return e[k]; }
        });
      }
    });
  }
  n["default"] = e;
  return Object.freeze(n);
}

var chains__namespace = /*#__PURE__*/_interopNamespace(chains);

const getChainFromId = (chainId) => {
    const idNumber = typeof chainId === 'string' ? parseInt(chainId) : chainId;
    return Object.values(chains__namespace).find((chain) => chain.id === idNumber);
};
const createWalletClientForDynamic = (messageTransport$1, _a) => _tslib.__awaiter(void 0, void 0, void 0, function* () {
    var _b;
    var { wallet } = _a, params = _tslib.__rest(_a, ["wallet"]);
    const ethRequestChannel = messageTransport.createRequestChannel(messageTransport$1);
    const walletRequestChannel = messageTransport.createRequestChannel(messageTransport$1);
    const providerProxy = {
        request: (requestArguments) => ethRequestChannel.request('ethRequest', {
            address: wallet.address,
            method: requestArguments.method,
            params: requestArguments.params,
        }),
    };
    const { network } = yield walletRequestChannel.request('getNetwork', {
        wallet,
    });
    return viem.createWalletClient(Object.assign(Object.assign({}, params), { account: wallet.address, chain: (_b = params.chain) !== null && _b !== void 0 ? _b : getChainFromId(network), transport: viem.custom(providerProxy, {
            key: 'dynamic-client-transport',
            name: 'Dynamic Client Transport',
            retryCount: 3,
            retryDelay: 200,
        }) }));
});

exports.createWalletClientForDynamic = createWalletClientForDynamic;
