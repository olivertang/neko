'use client'
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var chains = require('viem/chains');

function _interopNamespace(e) {
  if (e && e.__esModule) return e;
  var n = Object.create(null);
  if (e) {
    Object.keys(e).forEach(function (k) {
      if (k !== 'default') {
        var d = Object.getOwnPropertyDescriptor(e, k);
        Object.defineProperty(n, k, d.get ? d : {
          enumerable: true,
          get: function () { return e[k]; }
        });
      }
    });
  }
  n["default"] = e;
  return Object.freeze(n);
}

var chains__namespace = /*#__PURE__*/_interopNamespace(chains);

// eslint-disable-next-line import/no-namespace
const getChainById = (chainId) => {
    if (!chainId) {
        throw new Error('Chain with id undefined not found');
    }
    const idNumber = typeof chainId === 'string' ? parseInt(chainId) : chainId;
    const chain = Object.values(chains__namespace).find((chain) => chain.id === idNumber);
    if (!chain) {
        throw new Error(`Chain with id ${chainId} not found`);
    }
    return chain;
};

exports.getChainById = getChainById;
