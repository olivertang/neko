import { EntryPoint } from 'permissionless/types';
import { KernelAccountClient, KernelSmartAccount } from '@zerodev/sdk';
import { Chain, Transport } from 'viem';
import { Extension, Wallet } from '@dynamic-labs/client';
import { BundlerProvider, PaymasterType } from '@dynamic-labs/ethereum-aa';
type CreateKernelAccountClientArgs = {
    wallet: Wallet;
    bundlerProvider?: BundlerProvider;
    bundlerRpc?: string;
    paymasterRpc?: string;
    paymaster?: PaymasterType;
};
type IZeroDevExtension = {
    zeroDev: {
        createKernelClient: (args: CreateKernelAccountClientArgs) => Promise<KernelAccountClient<EntryPoint, Transport, Chain, KernelSmartAccount<EntryPoint, Transport, Chain>>>;
    };
};
export declare const ZeroDevExtension: () => Extension<IZeroDevExtension>;
export {};
